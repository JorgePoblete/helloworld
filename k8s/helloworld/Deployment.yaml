apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: helloworld
    app.kubernetes.io/name: helloworld
    app.kubernetes.io/version: 1.16.0
  name: helloworld
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app.kubernetes.io/instance: helloworld
      app.kubernetes.io/name: helloworld
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: helloworld
        app.kubernetes.io/name: helloworld
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: node/deploy-type
                    operator: In
                    values:
                      - microservice
              weight: 1
      containers:
        - image: "jorgepoblete/helloworld:1.0.17"
          imagePullPolicy: Always
          env:
            - name: REDIS_HOST
              value: "helloworld-redis"
            - name: REDIS_PORT
              value: "6379"
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
          name: helloworld
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "1000m"
          securityContext: {}
      imagePullSecrets:
        - name: dockerhub
      securityContext: {}
      serviceAccountName: helloworld
      tolerations:
        - effect: NoSchedule
          key: node/deploy-type
          operator: Equal
          value: microservice