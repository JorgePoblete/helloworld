# ref: https://github.com/crazy-max/diun/blob/master/.github/workflows/build.yml
name: Docker bake

on:
  # run it on push to the default repository branch
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set variables
      run: |
        echo "VERSION=$(cat k8s/values.yaml| grep tag: | awk '{print $2}' | sed 's/"//g')" >> $GITHUB_ENV
        echo "REPOSITORY=$(cat k8s/values.yaml| grep repository: | awk '{print $2}' | sed 's/"//g')" >> $GITHUB_ENV

    - name: Prepare
      id: prepare
      run: |
        echo ::set-output name=docker_platforms::linux/amd64,linux/arm64,linux/386,linux/arm/v6,linux/arm/v7,linux/arm64/v8
        echo ::set-output name=docker_image::${{ env.REPOSITORY }}
        echo ::set-output name=version::${{ env.VERSION }}

    # https://github.com/crazy-max/ghaction-docker-buildx
    - name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        version: latest

    - name: Environment
      run: |
        echo home=$HOME
        echo git_ref=$GITHUB_REF
        echo git_sha=$GITHUB_SHA
        echo version=${{ steps.prepare.outputs.version }}
        echo image=${{ steps.prepare.outputs.docker_image }}
        echo platforms=${{ steps.prepare.outputs.docker_platforms }}
        echo avail_platforms=${{ steps.buildx.outputs.platforms }}

    # https://github.com/actions/checkout
    - name: Checkout
      uses: actions/checkout@v2

    - name: Docker Buildx (no push)
      run: |
        docker buildx bake \
          --set app.platform=${{ steps.prepare.outputs.docker_platforms }} \
          --set app.output=type=image,push=false \
          --set app.tags="${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}" \
          --file ./docker/docker-compose.yml

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Docker Buildx (push)
      if: success()
      run: |
        docker buildx bake \
          --set app.platform=${{ steps.prepare.outputs.docker_platforms }} \
          --set app.output=type=image,push=true \
          --set app.tags="${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}" \
          --file ./docker/docker-compose.yml

    - name: Clear
      if: always()
      run: |
        rm -f ${HOME}/.docker/config.json
